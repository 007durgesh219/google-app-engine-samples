import wsgiref.handlers
import sys

from google3.apphosting.ext import db
from google3.apphosting.ext import webapp

class Geometry(db.Model):
  name = db.StringProperty()
  description = db.StringProperty(multiline=True)
  type = db.StringProperty()
  dateModified = db.DateProperty(auto_now_add=True)
  coordinates = db.ListProperty(db.GeoPt, default=None)
  bound = db.ListProperty(db.GeoPt, default=None)
  timeStamp = db.DateProperty(default=None)
  altitudes = db.ListProperty(float, default=None)
class MainPage(webapp.RequestHandler):

  def get(self):
    self.response.headers['Content-Type'] = 'text/plain'
    gp = db.GeoPt(1.0,1.0)
    geo = Geometry(name='test',description='<b>test</b>',type='point',coordinates=[gp], bound=[1.0,1.0])
    geo.put()

class GetAllPointsKml(webapp.RequestHandler):
  def get(self):
    limit = 0
    try:
      limit = self.request.get('limit')
    except ValueError:
      limit = 25
     
    geometries = db.GqlQuery("SELECT * FROM Geometry LIMIT 10")
    self.response.out.write('<?xml version="1.0" encoding="UTF-8"?>')
    self.response.out.write('<kml xmlns="http://earth.google.com/kml/2.2"><Folder>')
    for geometry in geometries:
        alt = geometry.altitudes[0]

      try:
        gp = geometry.coordinates[0]
        lat = gp.lat
        lon = gp.lon 
        self.response.out.write('<Placemark><name>%s</name><description>%s</description><Point><coordinates>%f,%f,%f</coordinates></Point></Placemark>' % (geometry.name,geometry.description,lon,lat,alt))
      except:
        self.response.out.write(sys.exc_info())
        self.response.out.write('no coordinates')

    self.response.out.write('</Folder></kml>')


class AddPoint(webapp.RequestHandler):
  def get(self):
    try:
      lat = float(self.request.get('lat'))
      long = float(self.request.get('long'))
      alt = float(self.request.get('alt'))
      name = str(self.request.get('name'))
      description = str(self.request.get('desc'))
      type = 'point'
      coord = db.GeoPt(lat,long)
      coords = [coord]
      bounds = [coord,coord]
      alts = [alt]
      gp = Geometry(name=name,description=description,type=type,coordinates=coords,bound=bounds,altitudes=alts)
      gp.put()
      

    except TypeError, ValueError:
      self.response.out.write("<html><body><p>Invalid inputs</p></body></html>")

application = webapp.WSGIApplication(
                                     [('/', MainPage),
                                      ('/gen/addpoint', AddPoint),
                                      ('/gen/getallpoints', GetAllPointsKml),
                                       ],
                                     debug=True)

wsgiref.handlers.CGIHandler().run(application)
